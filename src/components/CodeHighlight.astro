---
import { createHighlighter } from '../shiki-setup.js';

export interface Props {
  code: string;
  lang: string;
}

const { code, lang } = Astro.props;
const highlighter = await createHighlighter();
const highlightedCode = highlighter.codeToHtml(code, { lang, theme: 'nord' });

// Function to count lines of code
const lineCount = code.split('\n').length;
---

<div class="code-block relative font-mono text-sm">
  <div class="flex">
    <div class="hidden sm:block text-slate-500 pr-4 text-right select-none" aria-hidden="true">
      {Array(lineCount).fill(0).map((_, i) => (
        <div>{i + 1}</div>
      ))}
    </div>
    <pre class="language-{lang} flex-grow overflow-x-auto">
      <code set:html={highlightedCode} />
    </pre>
  </div>
  <div class="absolute top-2 right-2 flex space-x-2">
    <span class="bg-slate-700 text-slate-300 rounded px-2 py-1 text-xs uppercase">{lang}</span>
    <button class="copy-button bg-slate-700 text-slate-300 rounded px-2 py-1 text-xs hover:bg-slate-600 transition-colors">
      Copy
    </button>
  </div>
</div>

<style>
  .code-block {
    background-color: #2e3440; /* Nord theme background */
    color: #d8dee9; /* Nord theme text color */
    border-radius: 0.5rem;
    padding: 1rem;
    margin: 1rem 0;
  }

  .code-block pre {
    margin: 0;
    padding: 0;
  }

  /* Custom scrollbar styling */
  .code-block pre::-webkit-scrollbar {
    height: 8px;
  }

  .code-block pre::-webkit-scrollbar-thumb {
    background-color: #4c566a; /* Nord theme scrollbar color */
    border-radius: 4px;
  }

  .code-block pre::-webkit-scrollbar-track {
    background-color: #3b4252; /* Nord theme scrollbar track color */
  }
</style>

<script>
  document.addEventListener('astro:page-load', () => {
    const copyButtons = document.querySelectorAll('.copy-button');
    copyButtons.forEach(button => {
      button.addEventListener('click', () => {
        const codeBlock = button.closest('.code-block');
        const code = codeBlock.querySelector('code').textContent;
        navigator.clipboard.writeText(code).then(() => {
          button.textContent = 'Copied!';
          setTimeout(() => {
            button.textContent = 'Copy';
          }, 2000);
        });
      });
    });
  });
</script>